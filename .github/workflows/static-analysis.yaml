name: Static Analysis Pipeline

on:
  push:
    branches-ignore:
      - dev
permissions:
  contents: write
  security-events: write  # Ensure the action can upload SARIF results    

jobs:
  tflint:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Cache TFLint plugin directory
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0

      - name: Initialize TFLint
        run: tflint --init

      - name: Run TFLint and generate SARIF report
        run: |
          tflint -f sarif --chdir=infra/ --recursive > tflint.sarif
        continue-on-error: true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: tflint.sarif
          category: tflint

  checkov:
    name: 'Checkov Policies'
    runs-on: ubuntu-latest
    needs: tflint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Checkov PRISMA Policies
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          #config_file: aws/CKV_LIST.yaml
          output_format: sarif
          output_file_path: prisma_policies.sarif
        continue-on-error: true

      - name: Upload Checkov SARIF Reports
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: |
            prisma_policies.sarif
          category: checkov-analysis-1

      - name: Run Checkov CUSTOM Policies
        id: checkov_custom
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          external_checks_dirs: aws/custom_rules
          config_file: aws/CKV_CUSTOM_LIST.yaml
          output_format: sarif
          output_file_path: custom_policies.sarif
        continue-on-error: true

  tfsec:
    name: tfsec sarif report
    runs-on: ubuntu-latest
    needs: tflint

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: run report
        uses: aquasecurity/tfsec-sarif-action@v0.1.0
        with:
          sarif_file: tfsec.sarif          

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif
          category: tfsec 

  manual_approval:
    name: Manual Approval for SonarQube Upload
    runs-on: ubuntu-latest
    needs: [tfsec]
    steps:
      - name: Await Manual Approval
        run: echo "Please approve this step manually before proceeding with the upload to SonarQube."

  convert_sarif:
    name: Convert SARIF to SonarQube Format
    runs-on: ubuntu-latest
    needs: manual_approval
    steps:
      - name: Checkout Code (for the Python script)
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Run the SARIF to SonarQube conversion script
        run: |
          python .github/sarifToSonar.py

  upload-to-sonarqube:
    name: "Upload Converted Results to SonarQube"
    runs-on: ubuntu-latest
    needs: convert_sarif
    steps:
      - name: Upload Checkov Results to SonarQube
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" \
            -X POST "http://sonarqube:9000/api/issues/index" \
            -F projectKey=techFriday \
            -F file=@checkov-sonarqube.json

      - name: Upload TFSec Results to SonarQube
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" \
            -X POST "http://sonarqube:9000/api/issues/index" \
            -F projectKey=techFriday \
            -F file=@tfsec-sonarqube.json

  sonarqube:
    name: "SonarQube Analysis"
    runs-on: self-hosted
    needs: tflint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=techFriday \
            -Dsonar.sources=infra \
            -Dsonar.host.url=http://sonarqube:9000 \
            -Dsonar.token=sqp_37363d6fd7941be7da7e6fa9995ee04058c0c368 \
            -Dsonar.working.directory=/home/docker/.scannerwork
